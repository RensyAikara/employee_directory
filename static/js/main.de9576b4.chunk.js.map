{"version":3,"sources":["components/Header.js","components/SearchArea.js","components/EmployeeDetails.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","Header","style","SearchArea","display","marginTop","type","name","flex","placeholder","value","this","props","employees","onChange","handleInputChange","className","onClick","handleSubmit","backgroundColor","Component","EmployeeDetails","getStyle","borderStyle","borderWidth","sortbyName","scope","sortbyEmail","sortbyRole","sortbyDepartment","employee","map","eachemployee","key","id","email","role","department","Container","state","search","employeesFiltered","order","event","target","employeestyped","filter","toLowerCase","indexOf","console","log","setState","preventDefault","includes","alert","ascendingSort","sort","a","b","descendingSort","App","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.de9576b4.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n        <header style ={headerStyle}>\n          <h1>Employee Directory</h1>\n      </header>\n    );\n}\n    \nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n} \n\nexport default Header;","import React, { Component } from 'react';\n\nclass SearchArea extends Component{\n    render(){\n        return (\n            <form style= {{display: 'flex', marginTop: '10px'}}>\n                <input \n                  type=\"text\"\n                  name=\"title\"\n                  style= {{ flex: '10', padding: '5px' }}\n                  placeholder=\"Search by name...\"\n                  value = {this.props.employees}\n                  onChange={this.props.handleInputChange}\n                />\n\n                {/* <select value = {this.props.employees} onChange={this.props.handleInputChange}>\n                    <option>Search by name...</option>\n                    {this.props.employee.map(eachemployee => {\n                        return <option value={eachemployee.name} key={eachemployee.id}></option>\n                    })}\n                </select> */}\n\n                {/* <select className=\"custom-select\"  id=\"inputGroupSelect01\" onChange={this.props.handleInputChange} >\n                    <option value=\"DEFAULT\" disabled>Search by name...</option>\n                    {this.props.employee.map(eachemployee => {\n                        // console.log(eachemployee.name);\n                        return <option value={eachemployee.name} key={eachemployee.id} style={{color: 'black'}}></option>\n                    })}\n                </select> */}\n                <button \n                 type=\"submit\"\n                 value=\"Submit\"\n                 className= \"btn\"\n                 onClick= {this.props.handleSubmit}\n                 style= {{flex: '1', backgroundColor: 'blue', color: 'white'}}>Submit</button>\n            </form>\n        );   \n    }    \n}\n  \n\nexport default SearchArea;","import React, { Component } from 'react';\n\nclass EmployeeDetails extends Component{\n\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            marginTop: '40px',\n            borderStyle: 'solid',\n            borderWidth: '5px'\n        }\n    }\n\n    render(){\n        return (\n            <table style={this.getStyle()}  className=\"table table-striped\">\n                <thead style={{backgroundColor: '#bde9ba'}} >\n                    <tr style={{}} >\n                        <th onClick={this.props.sortbyName} scope=\"col\"><button style={{backgroundColor: '#bde9ba'}}>Employee Name</button></th>\n                        <th onClick={this.props.sortbyEmail} scope=\"col\"><button style={{backgroundColor: '#bde9ba'}}>Email</button></th>\n                        <th onClick={this.props.sortbyRole} scope=\"col\"><button style={{backgroundColor: '#bde9ba'}}>Role</button></th>\n                        <th onClick={this.props.sortbyDepartment} scope=\"col\"><button style={{backgroundColor: '#bde9ba'}}>Department</button></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.employee.map(eachemployee =>(\n                        <tr key={eachemployee.id} scope=\"row\" >\n                            <td>{eachemployee.name}</td>\n                            <td>{eachemployee.email}</td>\n                            <td>{eachemployee.role}</td>\n                            <td>{eachemployee.department}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n          );\n        }\n    }\n  \n\nexport default EmployeeDetails;","import React, { Component } from 'react';\nimport Header from './Header';\nimport SearchArea from './SearchArea';\nimport EmployeeDetails from './EmployeeDetails';\n\nclass Container extends Component{\n\n    state = {\n        search: \"\",\n        employees: [],\n        employeesFiltered: [],\n        order: \"\"\n    }\n\n    componentDidMount(){\n        this.setState({employeesFiltered: this.props.employees, employees: this.props.employees});  \n    }\n\n    handleInputChange = event => {\n        const search = event.target.value;\n        // console.log(this.state.employeesFiltered);\n        const employeestyped = this.state.employeesFiltered.filter(employee => employee.name.toLowerCase().indexOf(search.toLowerCase()) > -1);\n        console.log(employeestyped);\n        // this.setState({employeesFiltered});\n        this.setState({employees: employeestyped, search:search});\n        console.log(this.state.search);\n        \n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        if(!this.state.search){\n            alert(\"Select name\");\n        }\n        else{\n            const employeestyped = this.state.employeesFiltered.filter(employee => employee.name.toLowerCase().includes(this.state.search.toLowerCase()));\n            this.setState({employees: employeestyped, search: \"\"});\n            // console.log(employeestyped);\n            if(employeestyped == \"\"){\n                alert(\"Invalid name\");\n            }\n        }\n        \n    };\n\n    sortbyName = () => {\n        if(this.state.order === \"ascending\"){\n            const ascendingSort = this.state.employeesFiltered.sort((a,b) => (a.name > b.name) ? 1: -1)\n            this.setState({\n                employeesFiltered: ascendingSort,\n                order: \"descending\"\n            })\n        }\n        else{\n            const descendingSort = this.state.employeesFiltered.sort((a,b) => (a.name > b.name) ? -1: 1)\n            this.setState({\n                employeesFiltered: descendingSort,\n                order: \"ascending\"\n            })\n        }\n    }\n\n    sortbyEmail = () => {\n        if(this.state.order === \"ascending\"){\n            const ascendingSort = this.state.employeesFiltered.sort((a,b) => (a.email > b.email) ? 1: -1)\n            this.setState({\n                employeesFiltered: ascendingSort,\n                order: \"descending\"\n            })\n        }\n        else{\n            const descendingSort = this.state.employeesFiltered.sort((a,b) => (a.email > b.email) ? -1: 1)\n            this.setState({\n                employeesFiltered: descendingSort,\n                order: \"ascending\"\n            })\n        }\n    }\n\n    sortbyRole = () => {\n        if(this.state.order === \"ascending\"){\n            const ascendingSort = this.state.employeesFiltered.sort((a,b) => (a.role > b.role) ? 1: -1)\n            this.setState({\n                employeesFiltered: ascendingSort,\n                order: \"descending\"\n            })\n        }\n        else{\n            const descendingSort = this.state.employeesFiltered.sort((a,b) => (a.role > b.role) ? -1: 1)\n            this.setState({\n                employeesFiltered: descendingSort,\n                order: \"ascending\"\n            })\n        }\n    }\n\n    sortbyDepartment = () => {\n        if(this.state.order === \"ascending\"){\n            const ascendingSort = this.state.employeesFiltered.sort((a,b) => (a.department > b.department) ? 1: -1)\n            this.setState({\n                employeesFiltered: ascendingSort,\n                order: \"descending\"\n            })\n        }\n        else{\n            const descendingSort = this.state.employeesFiltered.sort((a,b) => (a.department > b.department) ? -1: 1)\n            this.setState({\n                employeesFiltered: descendingSort,\n                order: \"ascending\"\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"container-fluid\">\n                <Header />\n                <SearchArea employee={this.state.employees} handleSubmit= {this.handleSubmit} handleInputChange= {this.handleInputChange} />\n                {/* <SearchArea employee={this.props} handleSubmit= {this.handleSubmit} handleInputChange= {this.handleInputChange} /> */}\n                <EmployeeDetails employee={this.state.employees} sortbyName={this.sortbyName} sortbyEmail={this.sortbyEmail} sortbyRole={this.sortbyRole} sortbyDepartment={this.sortbyDepartment} employeesFiltered={this.state.employeesFiltered} />\n            </div>\n          );\n        }\n    }\n  \n\nexport default Container;","import React from 'react';\nimport './App.css';\nimport Container from './components/Container';\nimport employees from \"./employees.json\";\n// import Header from './components/Header';\n// import SearchArea from './components/SearchArea';\n// import EmployeeDetails from './components/EmployeeDetails';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Container />\n//       {/* <Header />\n//       <SearchArea />\n//       <EmployeeDetails /> */}\n//     </div>\n//   );\n// }\n\nclass App extends React.Component {\n  state={\n    employees: employees\n  }\n\n  render(){\n    return (\n          <div className=\"App\">\n            <Container employees={this.state.employees} />\n            {/* <Header />\n            <SearchArea />\n            <EmployeeDetails /> */}\n          </div>\n        );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}